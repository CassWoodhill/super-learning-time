@use '../../../styles/constants/layout.scss' as layout;
@use '../../../styles/constants/colours.scss' as colour;
@use '../../../styles/mixins/shadows.scss' as mix;
@use './zygolex-helpers.scss' as help;

.zygolex {
 display: grid;
 column-gap: 1.25rem;
 grid-template-columns: repeat(11, 7.8125rem);
}

.zygolex-word {
 border: 1px solid white;
 margin-top: layout.$gutter-xlarge;
 padding: layout.$gutter-small;

 input {
  margin: 0 auto;
  max-width: 9.375rem;
  width: 100%;
 }

 p {
  padding: 0 layout.$gutter-medium;
 }

 @each $index, $column in help.$words {
  &:nth-child(#{$index}) {
   grid-column: #{$column};
  }
 }
}

.is-word-match {
 @include mix.text-shadow(colour.$pink-dark, 1px);
 background-color: rgba(colour.$gold, 0.1);
 border-color: colour.$gold;
 color: colour.$gold;
}

.is-input {
 position: relative;

 &::before,
 &::after {
  content: '';
  background: transparent;
  border: 3px solid white;
  position: absolute;
 }

 @each $index, $pseudo in help.$inputs {
  &:nth-child(#{$index}) {
   @each $label, $group in $pseudo {
    @if $label == 'before' {
     &::before {
      @each $position, $value in $group {
       @include help.setPosition($position, $value);
      }
     }
    } @else {
     &::after {
      @each $position, $value in $group {
       @include help.setPosition($position, $value);
      }
     }
    }
   }
  }
 }

 &:nth-child(12) {
  border-style: dashed;
  border-width: 3px;
 }
}

.is-rhyme {
 $border-style: dashed;
 $border-colour: colour.$blue;

 // is-rhyme-first
 &-first::before {
  border-color: $border-colour;
  border-style: $border-style;
 }

 // is-rhyme-second
 &-second::after {
  border-color: $border-colour;
  border-style: $border-style;
 }
}

.is-letter {
 $border-colour: colour.$gold;
 $border-style: dotted;

 // is-letter-first
 &-first::before {
  border-color: $border-colour;
  border-style: $border-style;
 }

 // is-letter-second
 &-second::after {
  border-color: $border-colour;
  border-style: $border-style;
 }
}

.keys {
 border-collapse: collapse;

 td {
  padding: 0.3125rem;
  vertical-align: middle;
 }

 tr:not(:first-of-type) td {
  border-top: 1px solid;
 }

 td:last-of-type {
  padding-left: 1.875rem;
 }
}

.key {
 border: 3px solid white;
 display: block;
 width: layout.$gutter-xlarge;

 //key-letter
 &-letter {
  border-color: colour.$gold;
  border-style: dotted;
 }

 //key-rhyme
 &-rhyme {
  border-color: colour.$blue;
  border-style: dashed;
 }
}
